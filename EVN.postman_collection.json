{
	"info": {
		"_postman_id": "de360d1e-789c-4f54-b6ec-f752df1aa552",
		"name": "EVN",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36460391"
	},
	"item": [
		{
			"name": "vehicles/import",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has the expected structure\", function () {\r",
							"    pm.response.to.have.jsonBody('ImportedVehiclesCount');\r",
							"    pm.response.to.have.jsonBody('Errors');\r",
							"    pm.response.to.have.jsonBody('StatusCode');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present and is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7048/api/vehicles/import",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7048",
					"path": [
						"api",
						"vehicles",
						"import"
					]
				}
			},
			"response": []
		},
		{
			"name": "vehicles/augment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains UpdatedVehicle, Errors, and StatusCode\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property('UpdatedVehicle');\r",
							"    pm.expect(responseBody).to.have.property('Errors');\r",
							"    pm.expect(responseBody).to.have.property('StatusCode');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present and is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vin\": \"1G1ZT53826F109149\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7048/api/vehicles/augment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7048",
					"path": [
						"api",
						"vehicles",
						"augment"
					]
				}
			},
			"response": []
		},
		{
			"name": "vehicles/list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has Vehicles, Page, TotalCount, Errors, and StatusCode\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property('Vehicles');\r",
							"    pm.expect(responseBody).to.have.property('Page');\r",
							"    pm.expect(responseBody).to.have.property('TotalCount');\r",
							"    pm.expect(responseBody).to.have.property('Errors');\r",
							"    pm.expect(responseBody).to.have.property('StatusCode');\r",
							"});\r",
							"\r",
							"pm.test(\"First vehicle in the response has expected properties\", function () {\r",
							"    const firstVehicle = pm.response.json().Vehicles[0];\r",
							"    pm.expect(firstVehicle).to.have.property('DealerId');\r",
							"    pm.expect(firstVehicle).to.have.property('VIN');\r",
							"    pm.expect(firstVehicle).to.have.property('ModifiedDate');\r",
							"    pm.expect(firstVehicle).to.have.property('Make');\r",
							"    pm.expect(firstVehicle).to.have.property('Model');\r",
							"    pm.expect(firstVehicle).to.have.property('Year');\r",
							"    pm.expect(firstVehicle).to.have.property('Trim');\r",
							"    pm.expect(firstVehicle).to.have.property('VehicleType');\r",
							"    pm.expect(firstVehicle).to.have.property('FuelTypePrimary');\r",
							"    pm.expect(firstVehicle).to.have.property('Id');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present and is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"PageSize\": 20,\r\n    \"PageNumber\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7048/api/vehicles/list",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7048",
					"path": [
						"api",
						"vehicles",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "vehicles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains Vehicle details\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property('Vehicle');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('DealerId');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('VIN');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('ModifiedDate');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('Make');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('Model');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('Year');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('Trim');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('VehicleType');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('FuelTypePrimary');\r",
							"    pm.expect(responseBody.Vehicle).to.have.property('Id');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present and is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7048/api/vehicles?vin=1G1ZT53826F109149",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7048",
					"path": [
						"api",
						"vehicles"
					],
					"query": [
						{
							"key": "vin",
							"value": "1G1ZT53826F109149"
						}
					]
				}
			},
			"response": []
		}
	]
}